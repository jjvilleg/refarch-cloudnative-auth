apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
  labels:
    {{- include "auth.labels" . | indent 4 }}
spec:
  type: {{ .Values.service.type }}
  ports:
  - name: http
    port: {{ .Values.service.servicePort }}
  - name: https
    port: {{ .Values.service.servicePortHttps }}
  selector:
    {{- include "auth.labels" . | indent 4 }}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.service.name }}
  labels:
    {{- include "auth.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "auth.labels" . | indent 8 }}
    spec:
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        readinessProbe:
          httpGet:
            path: /
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 60
          timeoutSeconds: 60
        livenessProbe:
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 60
          timeoutSeconds: 60
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: PORT
            value: "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
        volumeMounts:
        - name: keystorevol
          mountPath: "/etc/keystorevol"
          readOnly: true
      volumes:
      - name: keystorevol
        secret:
          secretName: keystoresecret
